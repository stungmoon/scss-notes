{"version":3,"sources":["scss/main.scss","scss/global/variables.scss","scss/global/mixins.scss"],"names":[],"mappings":"AAGA;EAIY;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;AACA;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;AAD1B;EAA4B;;AAC5B;EAA0B;;;AAKtC;EAA8B,YCdjB;EDc0C,OCZzC;EDY8D;;;AAC5E;EEXI;EACA;EACA;;AFUA;EAA0B;EAAoB;EAAsB;EAA2B;EAA2D;;AACtJ;EEPJ;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA;EFJ8D;EAAsC;EAAa;EAAa;;;AAIlI;EAAkE;EAAe;EAAiB;EAA4C;EAAmB;;AAC7J;EElBA;EACA;EACA;EFgBmF;EAAc;;AAE7F;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAG1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;AAA1D;EAA0D;;;AAGlE;EAAkE;EAAgB;;AAC9E;EAA8D;EAAe;EAAW;;AAEpF;EEKJ,OFLoF;EEMpF,YFNoH;;AAChH;EEIJ,OFJoF;EEKpF,YFLsH;;AEFtH;EFFJ;IAMkE","file":"main.77bb5cfd.css","sourceRoot":"../src","sourcesContent":["@use './imports.scss' as *;\n@use 'sass:math';\n\n:root {\n    // set variables with custom colors and apply them to text and background classes\n    @each $color, $shades in $colors {\n        @each $shade, $value in $shades {\n            --clr-#{$color}-#{$shade}: #{$value};\n            .text-#{$color}-#{$shade} { color: --clr-#{$color}-#{$shade}; }\n            .bg-#{$color}-#{$shade} { background: --clr-#{$color}-#{$shade}};\n        }\n    }   \n}   \n\nbody                        { background: $color-pink; color: $color-black; margin: 0; }\nheader                      { @include flexcenter;\n    h1                      { position: relative; letter-spacing: 10px; text-transform: uppercase; text-shadow: 2px 2px 1px map-get($colors, tertiary, dark); color: map-get($colors, primary, light);\n        &::before           { @include absolute; @include pseudo; background: darken($color-pink, 10%); z-index: -1; height: 50%; top: unset; }\n    }\n}\n\n.grid                                                           { display: flex; flex-wrap: wrap; border: 1px solid darken($color-pink, 10%); margin: $s*4 auto; max-width: 800px; \n    [class^=col-]                                               { @include flexcenter; height: 40px; box-shadow: 0 0 2px 2px map-get($colors, secondary, light);; }\n    @for $i from 1 through length($pinks)                       {\n        [class^=col-]:nth-child(#{length($pinks)}n+#{$i})       { background: lighten(nth($pinks, $i), 20%); }\n    }\n    @for $i from 1 through $columns                             {\n        .col-#{$i}                                              { flex: 0 0 math.div(100%, math.div($columns, $i)); }\n    }        \n}\nmain                                                            { line-height: 2; font-size: 21px;\n    section                                                     { display: flex; gap: $s*4; padding: $s*4; }\n    .scheme                                                     { \n        &-pink                                                  { @include color-scheme(map-get($colors, primary, med), map-get($colors, tertiary, light)); } \n        &-green                                                 { @include color-scheme(map-get($colors, secondary, med), map-get($colors, tertiary, light)); }\n    }\n    @include mq(tablet)                                         { flex-wrap: nowrap; }\n}\n\n","$color-pink: lightcoral;\n$color-green: lightgreen;\n$color-black: #1f1f1f;\n$pinks: ( darken($color-pink, 5%), darken($color-pink, 8%), darken($color-pink, 11%), darken($color-pink, 14%), darken($color-pink, 17%));\n$colors: ( \n    primary: (light: lighten($color-pink, 20%), med: lighten($color-pink, 15%), dark: lighten($color-pink, 10%)), \n    secondary: (light: lighten($color-green, 20%), med: lighten($color-green, 15%), dark: lighten($color-green, 10%)), \n    tertiary: (light: lighten($color-black, 20%), med: lighten($color-black, 15%), dark: lighten($color-black, 10%))\n);\n\n$s: 10px;\n$columns: 12;\n$breakpoints: ( mobile: 390px, tablet: 768px, desktop: 1024px );","@use 'sass:map';\n@use '../global/variables.scss' as *;\n\n@mixin flexcenter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n@mixin absolute {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n\n@mixin pseudo {\n    display: block;\n    content: \"\";\n}\n\n@mixin absolutecenter {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n    \n@mixin mq($key) {\n    $size: map.get($breakpoints, $key);\n    @media (min-width: $size) {\n        @content;\n    }\n}\n\n@mixin color-scheme($text, $bg) {\n    color: $text;\n    background: $bg;\n}"]}